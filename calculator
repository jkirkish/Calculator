package calculus;

import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.Insets;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.List;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JTextField;

public class Calculator extends JFrame implements ActionListener {

	// instance variables

	private JButton press0 = new JButton("0");
	private JLabel label1 = new JLabel("Label");
	private JButton press1 = new JButton("1");
	private JButton press2 = new JButton("2");
	private JButton press3 = new JButton("3");
	private JButton press4 = new JButton("4");
	private JButton press5 = new JButton("5");
	private JButton press6 = new JButton("6");
	private JButton press7 = new JButton("7");
	private JButton press8 = new JButton("8");
	private JButton press9 = new JButton("9");
	private JButton press10 = new JButton("*");
	private JButton press11 = new JButton("+");
	private JButton press12 = new JButton("-");
	private JButton press13 = new JButton("/");
	private JButton press14 = new JButton(".");
	private JButton press15 = new JButton("CLR");
	private JButton equals = new JButton("=");
	private JButton modulo = new JButton("%");
	private final static JTextField text = new JTextField(20);
	private static String input;
	private static String input2;
	private static String[] operator = new String[1];

	public static void main(String[] args) {
		new Calculator();

	}

	public Calculator() {
		JFrame platform = new JFrame("Calculator");
		platform.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		platform.setSize(500, 500);

		// add a panel to the JFrame
		JPanel CalcPanel = new JPanel();
		CalcPanel.setLayout(new GridBagLayout());

		// declare the JButton components actionListeners

		press0.setActionCommand("0");
		press0.addActionListener(this);
		// Declare button 1
		press1.setActionCommand("1");
		press1.addActionListener(this);
		// Declare button 2

		press2.setActionCommand("2");
		press2.addActionListener(this);
		// Declare button 3

		press3.setActionCommand("3");
		press3.addActionListener(this);
		// Declare button 4

		press4.setActionCommand("4");
		press4.addActionListener(this);
		// Declare button 5

		press5.setActionCommand("5");
		press5.addActionListener(this);
		// Declare button 6

		press6.setActionCommand("6");
		press6.addActionListener(this);
		// Declare button 7

		press7.setActionCommand("7");
		press7.addActionListener(this);
		// Declare button 8

		press8.setActionCommand("8");
		press8.addActionListener(this);
		// Declare button 9

		press9.setActionCommand("9");
		press9.addActionListener(this);
		// Declare button 10

		press10.setActionCommand("*");
		press10.addActionListener(this);
		// Declare button 11

		press11.setActionCommand("+");
		press11.addActionListener(this);
		// Declare button 12

		press12.setActionCommand("-");
		press12.addActionListener(this);
		// Declare button 13

		press13.setActionCommand("/");
		press13.addActionListener(this);
		// Declare button 14

		press14.setActionCommand(".");
		press14.addActionListener(this);
		// Declare button 15

		press15.setActionCommand("CLR");
		press15.addActionListener(this);

		// Declare the "=" or equals button
		equals.setActionCommand("=");
		equals.addActionListener(this);

		modulo.setActionCommand("%");
		modulo.addActionListener(this);
		// set the Grid constraints object upJButton press = new JButton("0");
		GridBagConstraints c = new GridBagConstraints();

		// set the grid constraints for the Text
		c = new GridBagConstraints();

		c.gridx = 1;
		c.gridy = 0;
		c.ipadx = 175;
		c.insets = new Insets(0, 0, 50, 0);
		CalcPanel.add(text, c);

		// set the grid constraints for the button
		// c.gridx = column (x,y) coordinate system of a grid
		// c.gridy = rows
		c = new GridBagConstraints();

		// button 0 constraints
		c.gridx = 1;
		c.gridy = 5;
		c.insets = new Insets(0, 0, 0, 0);
		CalcPanel.add(press0, c);

		// button 1 constraints
		c = new GridBagConstraints();
		c.gridx = 0;
		c.gridy = 4;
		c.insets = new Insets(15, 0, 0, 0);
		CalcPanel.add(press1, c);

		// button 2 constraints
		c = new GridBagConstraints();
		c.gridx = 1;
		c.gridy = 4;
		c.insets = new Insets(0, 0, 0, 0);
		CalcPanel.add(press2, c);

		// button 3 constraints
		c = new GridBagConstraints();
		c.gridx = 2;
		c.gridy = 4;
		c.insets = new Insets(0, 0, 15, 0);
		CalcPanel.add(press3, c);
		
		// button 4 constraints
		c = new GridBagConstraints();
		c.gridx = 0;
		c.gridy = 3;
		c.insets = new Insets(0, 0, 0, 0);
		CalcPanel.add(press4, c);
		
		// button 5 constraints
		c = new GridBagConstraints();
		c.gridx = 1;
		c.gridy = 3;
		c.insets = new Insets(0, 0, 0, 0);
		CalcPanel.add(press5, c);
		
		// button 6 constraints
		c = new GridBagConstraints();
		c.gridx = 2;
		c.gridy = 3;
		c.insets = new Insets(0, 0, 0, 0);
		CalcPanel.add(press6, c);
		
		// button 7 constraints
		c = new GridBagConstraints();
		c.gridx = 0;
		c.gridy = 2;
		c.insets = new Insets(0, 0, 15, 0);
		CalcPanel.add(press7, c);
		
		// button 8 constraints
		c = new GridBagConstraints();
		c.gridx = 1;
		c.gridy = 2;
		c.insets = new Insets(0, 0, 0, 0);
		CalcPanel.add(press8, c);
		
		// button 9 constraints
		c = new GridBagConstraints();
		c.gridx = 2;
		c.gridy = 2;
		c.insets = new Insets(0, 0, 0, 0);
		CalcPanel.add(press9, c);
		
		// button 10 constraints
		c = new GridBagConstraints();
		c.gridx = 3;
		c.gridy = 3;
		c.insets = new Insets(0, 0, 0, 0);
		CalcPanel.add(press10, c);
		
		// button "+" the add button constraints
		c = new GridBagConstraints();
		c.gridx = 3;
		c.gridy = 5;
		c.insets = new Insets(0, 0, 0, 0);
		CalcPanel.add(press11, c);
		
		// the minus "-" button constraints
		c = new GridBagConstraints();
		c.gridx = 3;
		c.gridy = 4;
		c.insets = new Insets(0, 0, 0, 0);
		CalcPanel.add(press12, c);
		
		// the division button "/" constraints
		c = new GridBagConstraints();
		c.gridx = 3;
		c.gridy = 2;
		c.insets = new Insets(0, 0, 0, 0);
		CalcPanel.add(press13, c);
		
		// Declare button 14 as decimal "."
		c = new GridBagConstraints();
		c.gridx = 2;
		c.gridy = 5;
		c.insets = new Insets(0, 0, 0, 0);
		CalcPanel.add(press14, c);
		
		// Declare button 15 as CLR
		c = new GridBagConstraints();
		c.gridx = 0;
		c.gridy = 5;
		c.insets = new Insets(15, 0, 0, 0);
		CalcPanel.add(press15, c);

		// "Declare button 16 as "%" modulus button to get remainder
		c = new GridBagConstraints();
		c.gridx = 6;
		c.gridy = 4;
		c.insets = new Insets(15, 0, 0, 0);
		CalcPanel.add(modulo, c);
		// "Declare button 17 as ="
		c = new GridBagConstraints();
		c.gridx = 6;
		c.gridy = 5;
		c.insets = new Insets(15, 0, 0, 0);
		CalcPanel.add(equals, c);

		text.setEditable(true);
		// add the CalcPanel to the frame
		platform.add(CalcPanel);

		platform.setVisible(true);
	}

	@Override
	public void actionPerformed(ActionEvent arg0) {

		if (arg0.getActionCommand().equals("0")) {
			// set text and add value 0.0 to the arrayList

			text.setText(text.getText() + "0");

		}

		else if (arg0.getActionCommand().equals("1")) {
			// set text and add value 1.0 to the arrayList

			text.setText(text.getText() + "1");

		} else if (arg0.getActionCommand().equals("2")) {
			// set text and add value 2.0 to the arrayList
			text.setText(text.getText() + "2");

		} else if (arg0.getActionCommand().equals("3")) {
			// set text and add value 3.0 to the arrayList
			text.setText(text.getText() + "3");

		} else if (arg0.getActionCommand().equals("4")) {
			// set text and add value 4.0 to the arrayList
			text.setText(text.getText() + "4");

		}

		else if (arg0.getActionCommand().equals("5")) {
			// set text and add value 5.0 to the arrayList
			text.setText(text.getText() + "5");

		} else if (arg0.getActionCommand().equals("6")) {
			// set text and add value 6.0 to the arrayList
			text.setText(text.getText() + "6");

		} else if (arg0.getActionCommand().equals("7")) {
			// set text and add value 7.0 to the arrayList
			text.setText(text.getText() + "7");

		}

		else if (arg0.getActionCommand().equals("8")) {
			// set text and add value 8.0 to the arrayList
			text.setText(text.getText() + "8");

		} else if (arg0.getActionCommand().equals("9")) {
			// set text and add value 9.0 to the arrayList
			text.setText(text.getText() + "9");

		} else if (arg0.getActionCommand().equals("*")) {
			// set text and add value * to the arrayList
			operator[0] = "*";
			input = text.getText();
			input.substring(0, input.length() - 1);
			text.setText("*");
		}

		else if (arg0.getActionCommand().equals("+")) {
			// set text and add value "+" to the arrayList

			operator[0] = "+";
			input = text.getText();
			input.substring(0, input.length() - 1);
			text.setText("+");

		} else if (arg0.getActionCommand().equals("-")) {
			// set text and add value "-" to the arrayList
			operator[0] = "-";
			input = text.getText();
			input.substring(0, input.length() - 1);
			text.setText("-");
		} else if (arg0.getActionCommand().equals("/")) {
			// set text and add value "/" to the arrayList
			operator[0] = "/";
			input = text.getText();
			input.substring(0, input.length() - 1);
			text.setText("/");
		} else if (arg0.getActionCommand().equals("%")) {
			// set text and add value "%" to the arrayList
			operator[0] = "%";
			input = text.getText();
			input.substring(0, input.length() - 1);
			text.setText("%");
		} else if (arg0.getActionCommand().equals(".")) {
			// set the text to show "."
			text.setText(".");
			operator[0] = ".";
		} else if (arg0.getActionCommand().equals("CLR")) {
			// set the text to show "CLR" and CLR the arraylist
			text.setText(null);
			input = null;
			input2 = null;
		} else  {

			input2 = text.getText();
			input2 = input2.substring(1);
			//input2.substring(2, input2.length() - 1);

			if (operator[0].equals("+")) {
				
				String result = Double.toString(add(input, input2));
				text.setText(result);
			}
			else if (operator[0].equals("-")) {
				String result = Double.toString(sub(input, input2));
				text.setText(result);
			}
			else if (operator[0].equals("*")) {
				String result = Double.toString(multi(input, input2));
				text.setText(result);
			}
			else if (operator[0].equals("/")) {
				String result = Double.toString(div(input, input2));
				text.setText(result);
			}
			else if (operator[0].equals("%")) {
				String result = Double.toString(add(input, input2));
				text.setText(result);
			}

		}
	}

	public static Double add(String inputAdd, String inputAdd2) {
		// addition operation

		Double add1 = new Double(Double.parseDouble(inputAdd));
		Double add2 = new Double(Double.parseDouble(inputAdd2));

		Double sum = Double.sum(add1, add2);

		return sum;

	}

	public static Double sub(String inputAdd, String inputAdd2) {
		// subtraction operation

		Double sub1 = new Double(Double.parseDouble(inputAdd));
		Double sub2 = new Double(Double.parseDouble(inputAdd2));

		Double difference = sub1 - sub2;

		return difference;
	}

	public static Double multi(String inputAdd, String inputAdd2) {
		// multi operation

		Double mult1 = new Double(Double.parseDouble(inputAdd));
		Double mult2 = new Double(Double.parseDouble(inputAdd2));

		Double product = mult1 * mult2;

		return product;
	}

	public static Double div(String inputAdd, String inputAdd2) {
		// divide operation

		Double quot1 = new Double(Double.parseDouble(inputAdd));
		Double quot2 = new Double(Double.parseDouble(inputAdd2));
	

		Double quotient = (quot1 / quot2);
		return quotient;

	}

	public static Double Mod(String inputAdd, String inputAdd2) {
		// modulus operation

		Double mod1 = new Double(Double.parseDouble(inputAdd));
		Double mod2 = new Double(Double.parseDouble(inputAdd2));

		Double remainder = (mod1 % mod2);

		return remainder;
	}
}
